spring.application.name=chok-demo
# =====================================================================================
# eureka.client
# =====================================================================================
# 设置主机名  
eureka.instance.hostname= localhost 
# 服务注册中心的配置内容，指定服务注册中心的位置，可指定多个，以逗号相隔
eureka.client.serviceUrl.defaultZone=http://localhost:8880/eureka/

# =====================================================================================
# chok oauth2
# =====================================================================================
chok.oauth2.server.uri=http://localhost:9090/chok-sso
chok.oauth2.server.logout-uri=${chok.oauth2.server.uri}/logout

# =====================================================================================
# security
# =====================================================================================
#spring.security.user.name=admin
#spring.security.user.password=admin
#spring.security.basic.enabled=false
security.oauth2.client.client-id=${spring.application.name}
security.oauth2.client.client-secret=secret
security.oauth2.client.access-token-uri=${chok.oauth2.server.uri}/oauth/token
security.oauth2.client.user-authorization-uri=${chok.oauth2.server.uri}/oauth/authorize
security.oauth2.resource.user-info-uri=${chok.oauth2.server.uri}/user/me

# =====================================================================================
# chok security auth
# =====================================================================================
# 服务提供者id, 对应chok-eureka-client的application.properties中的spring.application.name
chok.security.auth.service-id=chok-eureka-client
# 服务提供者网络协议，默认http
chok.security.auth.protocol=http
# 服务提供者授权地址
chok.security.auth.uri=/authority
# 服务提供者授权地址参数key
chok.security.auth.uri-key=appcode
# 服务提供者授权地址参数value
chok.security.auth.uri-value=chok-demo
# 忽略拦截请求， 默认 /,/logout,/error,/index*,/**/home/menu,/staticexternal/**,/staticinternal/**
chok.security.ignore-uris=/,/logout,/error,/index*,/**/home/menu,/staticexternal/**,/staticinternal/**,**.js,**.css

# =====================================================================================
# chok security menu
# =====================================================================================
chok.security.menu.service-id=chok-eureka-client
# 服务提供者网络协议，默认http
chok.security.menu.protocol=http
# 服务提供者授权地址
chok.security.menu.uri=/menu

# =====================================================================================
# i18n
# =====================================================================================
spring.messages.basename=i18n/messages
spring.messages.encoding=UTF-8

# =====================================================================================
# 内嵌tomcat配置
# =====================================================================================
server.tomcat.uri-encoding=UTF-8
server.port=9093
server.servlet.contextPath=/${spring.application.name}
server.servlet.jsp.init-parameters.development=true
server.servlet.session.cookie.name=csession3
# 关闭tomcat持久化session
# 否则重启时会报： Exception loading sessions from persistent storage
# 但不影响正常使用
server.servlet.session.persistent=false

# =====================================================================================
# jsp映射配置
# =====================================================================================
# old
#spring.mvc.view.prefix=/WEB-INF/view
#spring.mvc.view.suffix=.jsp
# new
spring.mvc.view.prefix=/WEB-INF/view/
spring.mvc.view.suffix=.jsp
spring.mvc.view.view-name=jsp/*

# =====================================================================================
# thymeleaf映射配置
# =====================================================================================
spring.thymeleaf.prefix=/WEB-INF/view/
spring.thymeleaf.suffix=.html
spring.thymeleaf.view-names=html/*
spring.thymeleaf.mode=HTML
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.servlet.content-type=text/html
spring.thymeleaf.cache=false

# =====================================================================================
# Log 配置
# =====================================================================================
#logging.level.org.springframework=ERROR
#logging.level.org.springframework.security=ERROR
#logging.level.com.admin=DEBUG
#logging.file=logs/app.log
logging.config=classpath:config/logback.xml

# =====================================================================================
# Redis 配置
# =====================================================================================
## Redis数据库索引（默认为0）
spring.redis.jedis.database=0
## Redis服务器地址
spring.redis.jedis.host=127.0.0.1
## Redis服务器连接端口
spring.redis.jedis.port=6379
## Redis服务器连接密码（默认为空）
spring.redis.jedis.password=
## 连接池最大连接数（使用负值表示没有限制）
spring.redis.jedis.pool.max-active=8
## 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.jedis.pool.max-wait=-1
## 连接池中的最大空闲连接
spring.redis.jedis.pool.max-idle=8
## 连接池中的最小空闲连接
spring.redis.jedis.pool.min-idle=0
## 连接超时时间（毫秒）
spring.redis.jedis.timeout=0

# =====================================================================================
# 图片路径
# =====================================================================================
image.upload.path=/app/origami/upload/images/
image.path=http://localhost:8787/origami/images/

# =====================================================================================
# 外部静态文件目录映射
# =====================================================================================
static.path.external=/staticexternal/**
static.doBase.external=file:C:/Dev/projects/jee/static/web/
#static.doBase=file:/Users/ole/Dev/JAVA/Projects/Mine/static/web/

# =====================================================================================
# 本地静态文件目录映射
# =====================================================================================
static.path.internal=/staticinternal/**
static.doBase.internal=WEB-INF/view/jsp/

# =====================================================================================
# 本地自定义图片目录映射
# =====================================================================================
img.path.internal=/img/**
img.doBase.internal=classpath:/img/